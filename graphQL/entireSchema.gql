scalar JSON

type DeletionResultInfo {
  success: Boolean!
  Meta: MutationResultInfo!
}

type MutationResultInfo {
  transaction: Boolean!
  elapsedTime: Int!
}

type QueryResultsMetadata {
  count: Int!
}

type QueryRelationshipResultsMetadata {
  count: Int!
}

input StringArrayUpdate {
  index: Int!
  value: String!
}

input IntArrayUpdate {
  index: Int!
  value: Int!
}

input FloatArrayUpdate {
  index: Int!
  value: Float!
}

type Report {
  _id: String
  userId: String
  weekNumer: Int
  year: Int
  tasks: Task
}

type ReportQueryResults {
  Reports: [Report!]!
  Meta: QueryResultsMetadata!
}

type ReportSingleQueryResult {
  Report: Report
}

type ReportMutationResult {
  Report: Report
  success: Boolean!
  Meta: MutationResultInfo!
}

type ReportMutationResultMulti {
  Reports: [Report]
  success: Boolean!
  Meta: MutationResultInfo!
}

type ReportBulkMutationResult {
  success: Boolean!
  Meta: MutationResultInfo!
}

input ReportInput {
  _id: String
  userId: String
  weekNumer: Int
  year: Int
  tasks: TaskInput
}

input ReportMutationInput {
  userId: String
  weekNumer: Int
  weekNumer_INC: Int
  weekNumer_DEC: Int
  year: Int
  year_INC: Int
  year_DEC: Int
  tasks_SET: TaskInput
}

input ReportSort {
  _id: Int
  userId: Int
  weekNumer: Int
  year: Int
}

input ReportFilters {
  _id: String
  _id_ne: String
  _id_in: [String]
  _id_nin: [String]
  userId: String
  userId_ne: String
  userId_in: [String]
  userId_nin: [String]
  weekNumer_lt: Int
  weekNumer_lte: Int
  weekNumer_gt: Int
  weekNumer_gte: Int
  weekNumer: Int
  weekNumer_ne: Int
  weekNumer_in: [Int]
  weekNumer_nin: [Int]
  year_lt: Int
  year_lte: Int
  year_gt: Int
  year_gte: Int
  year: Int
  year_ne: Int
  year_in: [Int]
  year_nin: [Int]
  OR: [ReportFilters]
}

type Task {
  _id: String
  reportId: String
  isDone: Boolean
}

type TaskQueryResults {
  Tasks: [Task!]!
  Meta: QueryResultsMetadata!
}

type TaskSingleQueryResult {
  Task: Task
}

type TaskMutationResult {
  Task: Task
  success: Boolean!
  Meta: MutationResultInfo!
}

type TaskMutationResultMulti {
  Tasks: [Task]
  success: Boolean!
  Meta: MutationResultInfo!
}

type TaskBulkMutationResult {
  success: Boolean!
  Meta: MutationResultInfo!
}

input TaskInput {
  _id: String
  reportId: String
  isDone: Boolean
}

input TaskMutationInput {
  reportId: String
  isDone: Boolean
}

input TaskSort {
  _id: Int
  reportId: Int
  isDone: Int
}

input TaskFilters {
  _id: String
  _id_ne: String
  _id_in: [String]
  _id_nin: [String]
  reportId: String
  reportId_ne: String
  reportId_in: [String]
  reportId_nin: [String]
  isDone: Boolean
  isDone_ne: Boolean
  isDone_in: [Boolean]
  isDone_nin: [Boolean]
  OR: [TaskFilters]
}

type User {
  _id: String
  name: String
  isLead: Boolean
  reports: Report
}

type UserQueryResults {
  Users: [User!]!
  Meta: QueryResultsMetadata!
}

type UserSingleQueryResult {
  User: User
}

type UserMutationResult {
  User: User
  success: Boolean!
  Meta: MutationResultInfo!
}

input UserInput {
  _id: String
  name: String
  isLead: Boolean
  reports: ReportInput
}

input UserMutationInput {
  name: String
  isLead: Boolean
  reports_SET: ReportInput
}

input UserSort {
  _id: Int
  name: Int
  isLead: Int
}

input UserFilters {
  _id: String
  _id_ne: String
  _id_in: [String]
  _id_nin: [String]
  name_contains: String
  name_startsWith: String
  name_endsWith: String
  name_regex: String
  name: String
  name_ne: String
  name_in: [String]
  name_nin: [String]
  isLead: Boolean
  isLead_ne: Boolean
  isLead_in: [Boolean]
  isLead_nin: [Boolean]
  OR: [UserFilters]
}

type Query {
  allReports(
    _id: String
    _id_ne: String
    _id_in: [String]
    _id_nin: [String]
    userId: String
    userId_ne: String
    userId_in: [String]
    userId_nin: [String]
    weekNumer_lt: Int
    weekNumer_lte: Int
    weekNumer_gt: Int
    weekNumer_gte: Int
    weekNumer: Int
    weekNumer_ne: Int
    weekNumer_in: [Int]
    weekNumer_nin: [Int]
    year_lt: Int
    year_lte: Int
    year_gt: Int
    year_gte: Int
    year: Int
    year_ne: Int
    year_in: [Int]
    year_nin: [Int]
    OR: [ReportFilters]
    SORT: ReportSort
    SORTS: [ReportSort]
    LIMIT: Int
    SKIP: Int
    PAGE: Int
    PAGE_SIZE: Int
  ): ReportQueryResults!

  getReport(_id: String): ReportSingleQueryResult!

  allTasks(
    _id: String
    _id_ne: String
    _id_in: [String]
    _id_nin: [String]
    reportId: String
    reportId_ne: String
    reportId_in: [String]
    reportId_nin: [String]
    isDone: Boolean
    isDone_ne: Boolean
    isDone_in: [Boolean]
    isDone_nin: [Boolean]
    OR: [TaskFilters]
    SORT: TaskSort
    SORTS: [TaskSort]
    LIMIT: Int
    SKIP: Int
    PAGE: Int
    PAGE_SIZE: Int
  ): TaskQueryResults!

  getTask(_id: String): TaskSingleQueryResult!

  allUsers(
    _id: String
    _id_ne: String
    _id_in: [String]
    _id_nin: [String]
    name_contains: String
    name_startsWith: String
    name_endsWith: String
    name_regex: String
    name: String
    name_ne: String
    name_in: [String]
    name_nin: [String]
    isLead: Boolean
    isLead_ne: Boolean
    isLead_in: [Boolean]
    isLead_nin: [Boolean]
    OR: [UserFilters]
    SORT: UserSort
    SORTS: [UserSort]
    LIMIT: Int
    SKIP: Int
    PAGE: Int
    PAGE_SIZE: Int
  ): UserQueryResults!

  getUser(_id: String): UserSingleQueryResult!
}

type Mutation {
  createReport(Report: ReportInput): ReportMutationResult

  updateReport(_id: String, Updates: ReportMutationInput): ReportMutationResult

  deleteReport(_id: String): DeletionResultInfo

  createTask(Task: TaskInput): TaskMutationResult

  updateTask(_id: String, Updates: TaskMutationInput): TaskMutationResult

  updateTasks(
    _ids: [String]
    Updates: TaskMutationInput
  ): TaskMutationResultMulti

  updateTasksBulk(
    Match: TaskFilters
    Updates: TaskMutationInput
  ): TaskBulkMutationResult

  deleteTask(_id: String): DeletionResultInfo

  createUser(User: UserInput): UserMutationResult

  updateUser(_id: String, Updates: UserMutationInput): UserMutationResult

  deleteUser(_id: String): DeletionResultInfo
}
